# type :ignore
import sys
# import pickle
# from nacl.signing import VerifyKey
# from nacl.signing import SigningKey
# old_factory = logging.getLogRecordFactory()
import logging


def main(process):
    logger = logging.getLogger(__name__)
    logging.basicConfig(level=logging.DEBUG, format='%(asctime)s %(levelname)-8s %(message)s',
                        datefmt='%a, %d %b %Y %H:%M:%S', filename='test_case_1/file5.log', filemode='w')
    # path = "test_case_1/file.log"
    # sys.stdout = open(path, "w")
    # print("Hello world")
    # output("hello")
    # print(output("terminal"))
    # # logging.info(output("hello"))

    # # output()
    # log = open('test_case_1/file5.log', "a")
    #  = log
    # output("here")
    print("here2")

# class A:
#     def __init__(self, x, y):
#         self.x = x
#         self.y = y

# Alter the signed message text
# forged = signed[:-1] + bytes([int(signed[-1]) ^ 1])
# # Will raise nacl.exceptions.BadSignatureError, since the signature check
# # is failing
# verify_key.verify(forged)
