# type: ignore
# import queue
class Mempool:
    def __init__(self, maxSize=100, txnsInBlock=1) -> None:
        self.q = {}

        self.txnsInBlock = txnsInBlock

    def addTxns(self, txn):
        # self.q.append(newObj)
        self.q[txn] = "REQUESTED"

    def isEmpty(self):
        for key in self.q.keys():
            if self.q[key] == "REQUESTED":
                return False
        return True

    def allCommitted(self):
        for key in self.q.keys():
            if self.q[key] != "COMMITTED":
                return False
        return True

    def make_transaction_committed(self, txn):
        self.q[txn] = "COMMITTED"
        return

    def make_transaction_pending(self, txn):
        self.q[txn] = "PENDING"
        return

    def get_requested_transaction(self):
        if self.isEmpty():
            return None
        for key in self.q.keys():
            if self.q[key] == "REQUESTED":
                self.q[key] = "PENDING"
                return key
        return None

    # def isFull(self):
    #     return self.q.full()

    # def printQueue(self):
